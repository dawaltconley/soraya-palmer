AWSTemplateFormatVersion: 2010-09-09
Description: Resources for subscribing visitors to mailing list

Parameters:
  ApiGatewayId:
    Type: String
    Description: ID of the Api Gateway API
  AllowOrigin:
    Type: String
  MailerliteApiKey:
    Type: 'AWS::SSM::Parameter::Value<String>'
  Honeypot:
    Type: CommaDelimitedList
    Description: List of honeypot form field names. These will cause the function to quietly abort.
    Default: ''
  # # new
  # CertificateArn:
  #   Type: String
  #   Description: Certificate Manager ARN for the ApiDomain certificate. Required to use a custom domain.
  #   Default: ''
  # HostedZoneId:
  #   Type: AWS::Route53::HostedZone::Id # or string...
  #   Default: ''
  # # Route53Dns:
  # #   Type: String
  # #   Description: Whether this domain uses Route53 for its DNS
  # #   Default: 'true'
  # #   AllowedValues: ['true', 'false']
  # ApiDomain:
  #   Type: String
  #   Description: Full domain where the api is hosted. Used to create an API Gateway custom domain name for this deployment.
  #   Default: ''
  # ApiBasePath:
  #   Type: String
  #   Description: Base path of the custom domain where the API will be hosted.
  #   Default: ''

# Conditions:
#   HasApiDomain: !Not [!Equals [!Ref ApiDomain, '']]
#   HasApiBasePath: !Not [!Equals [!Ref ApiBasePath, '']]
#   HasHostedZone: !Not [!Equals [!Ref HostedZoneId, '']]
#   HasCertificate: !Not [!Equals [!Ref CertificateArn, '']]
#   HasCustomApiDomain: !And
#     - !Condition HasApiDomain
#     - !Condition HasCertificate
#   CorsEnabled: !Not [!Equals [!Ref AllowOrigin, '']]
#   CreateRecordSetGroup: !And
#     - !Condition HasCustomApiDomain
#     - !Condition HasHostedZone

Resources:
  ApiMethod:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref ApiGatewayId # Invalid API identifier specified 694316186841:knyawz3heb (Service: AmazonApiGatewayV2; Status Code: 404; Error Code: NotFoundException; Request ID: cb5323c0-4cef-447b-9cbd-b86195321bca; Proxy: null)
      IntegrationMethod: GET
      IntegrationType: AWS_PROXY
      # IntegrationUri: !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaFunction.Arn}/invocations"
      # IntegrationUri: !Sub "arn:aws:lambda:${AWS::Region}:694316186841:function:WebPortfolio-ContactFormApi-ZBK9F9-ContactFunction-ZIte5IU7lY2i"
      IntegrationUri: !GetAtt LambdaFunction.Arn

    # Currently 694316186841:knyawz3heb
    # Should just be knyawz3heb

  ApiResource:
    Type: AWS::ApiGatewayV2::Route
    DependsOn:
      # also ApiGatewayRestApi
      - LambdaFunction
      - ApiMethod
    Properties:
      ApiId: !Ref ApiGatewayId
      RouteKey: GET /subscribe
      Target: !Sub 'integrations/${ApiMethod}'

  LambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code: mailerlite-lambda
      # Code: ./mailerlite-lambda/index.js
      # ZipFile: ./mailerlite-lambda/index.js
      Handler: index.lambdaHandler
      Runtime: nodejs18.x
      Timeout: 10
      Architectures:
        - x86_64
      # Role: # The Amazon Resource Name (ARN) of the function's execution role.
      # Role: arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Role: !GetAtt LambdaRole.Arn
      Environment:
        Variables:
          ALLOW_ORIGIN: !Ref AllowOrigin
          MAILERLITE_API_KEY: !Ref MailerliteApiKey
          HONEYPOT_FIELDS: !Join [',', !Ref Honeypot]

  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole

  # SubscribeApi:
  #   Type: AWS::Serverless::Api
  #   Properties:
  #     StageName: Prod
  #     Cors: !If
  #       - CorsEnabled
  #       - AllowMethods: "'GET,POST,OPTIONS'"
  #         AllowHeaders: "'Content-Type'"
  #         AllowOrigin: !Sub "'${AllowOrigin}'"
  #       - !Ref AWS::NoValue
  #     # Domain:
  #     #   # Domain: !If
  #     #   # - HasCustomApiDomain
  #     #   # - BasePath: !If
  #     #   BasePath: !If
  #     #     - HasApiBasePath
  #     #     - - !Ref ApiBasePath # could just set default to '/' I think
  #     #     - !Ref AWS::NoValue
  #     #   CertificateArn: !If
  #     #     - HasCertificate
  #     #     - !Ref CertificateArn
  #     #     - !Ref AWS::NoValue
  #     #   DomainName: !If
  #     #     - HasApiDomain
  #     #     - !Ref ApiDomain
  #     #     - !Ref AWS::NoValue
  #     #   Route53:
  #     #     HostedZoneId: !Ref HostedZoneId
  #     #     # Route53: !If
  #     #     #   - HasHostedZone
  #     #     # - HostedZoneId: !Ref HostedZoneId
  #     #     # - !Ref AWS::NoValue
  #     #   # - !Ref AWS::NoValue
  #
  # SubscribeFunction:
  #   Type: AWS::Serverless::Function
  #   Properties:
  #     CodeUri: mailerlite-lambda
  #     Handler: index.lambdaHandler
  #     Runtime: nodejs18.x
  #     Architectures:
  #       - x86_64
  #     Timeout: 10
  #     Events:
  #       Subscribe:
  #         Type: Api
  #         Properties:
  #           Path: /subscribe
  #           Method: get
  #           RestApiId: !Ref SubscribeApi
  #     Environment:
  #       Variables:
  #         ALLOW_ORIGIN: !Ref AllowOrigin
  #         MAILERLITE_API_KEY: !Ref MailerliteApiKey
  #         HONEYPOT_FIELDS: !Join [',', !Ref Honeypot]
  #
  # CustomDomain:
  #   Type: AWS::ApiGatewayV2::DomainName
  #   Condition: HasCustomApiDomain
  #   Properties:
  #     DomainName: !Ref ApiDomain
  #     DomainNameConfigurations:
  #       - CertificateArn: !Ref CertificateArn
  #         SecurityPolicy: TLS_1_2
  #
  # CustomDomainMapping:
  #   Type: AWS::ApiGatewayV2::ApiMapping
  #   Condition: HasCustomApiDomain
  #   Properties:
  #     DomainName: !Ref CustomDomain
  #     ApiId: !Ref SubscribeApi
  #     Stage: Prod
  #     ApiMappingKey: !If [HasApiBasePath, !Ref ApiBasePath, !Ref AWS::NoValue]
  #
  # RecordSetGroup:
  #   Type: AWS::Route53::RecordSetGroup
  #   Condition: CreateRecordSetGroup
  #   Properties:
  #     HostedZoneName: !Sub '${ApiDomain}.'
  #     RecordSets:
  #       - Name: !Ref CustomDomain
  #         Type: A
  #         AliasTarget:
  #           HostedZoneId: !GetAtt CustomDomain.RegionalHostedZoneId
  #           DNSName: !GetAtt CustomDomain.RegionalDomainName
