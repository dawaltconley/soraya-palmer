---
import Page from '@layouts/Page.astro'
import TinaContent from '@components/TinaContent.tsx'
import TinaContactForm from '@components/TinaContactForm.tsx'
import TinaBackgroundImage from '@components/BackgroundImage.tsx'
import { makeResponsive } from '@lib/build/images'

import { client } from '@tina/__generated__/client'
const page = await client.queries.workWithMePage({
  relativePath: 'services.mdx',
})

const bodyImages: string[] = page.data.workWithMePage.body.children
  .filter((e: any) => e?.name === 'ImageLink')
  .map((e: any) => e.props.image)
  .filter((e: any): e is string => typeof e === 'string')

const images = await makeResponsive([
  ...bodyImages.map((path) => ({
    path,
    size: '(min-width: 468px) 421px, 100vw',
  })),
])
---

<Page
  title={page.data.workWithMePage.title}
  headerImage={page.data.workWithMePage.headerImage}
  {...page.data.workWithMePage.meta}
>
  <TinaBackgroundImage
    client:tina
    slot="header-image"
    data={page}
    optimized={page.data.workWithMePage.headerImage}
  />
  <TinaContent
    client:tina
    slot="header-title"
    data={page}
    path="workWithMePage.title"
  />
  <div
    class="container mx-auto py-16 xl:flex xl:items-start xl:justify-between"
  >
    <main
      class="prose prose-lg mx-auto font-serif prose-headings:font-display first:prose-headings:mt-0 prose-li:marker:text-amber-300 xl:ml-0"
    >
      <TinaContent
        client:tina
        data={page}
        path="workWithMePage.body"
        images={images}
      />
    </main>
    <div
      id="contact"
      class="relative mt-16 basis-[36rem] text-lg xl:prose xl:prose-lg first:prose-h2:mt-0 prose-p:my-0 xl:sticky xl:top-8 xl:ml-16 xl:mt-0 xl:border-l xl:pl-16"
    >
      <TinaContactForm client:visible data={page} />
    </div>
  </div>
</Page>
